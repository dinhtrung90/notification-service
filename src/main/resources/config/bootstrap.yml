# ===================================================================
# Spring Cloud Config bootstrap configuration for the "dev" profile
# In prod profile, properties will be overwritten by the ones defined in bootstrap-prod.yml
# ===================================================================


kafk-topic:
  topic: ${app.kafka-prefix}-default
  email-invitation: ${app.kafka-prefix}-email-invitations-topic

jhipster:
  registry:
    password: admin

app:
  registry-url: vps-5785f290.vps.ovh.ca
  redis-url: fingmeup.com
  redis-password: 8yJTD47c9KkGG7Rx3SaL
  kafka-brokers: fingmeup.com:9092
  Kafka-prefix: elend
  mysql-url: vps-5785f290.vps.ovh.ca
  mail-url: smtp.gmail.com
  kafka:
    group:
      consumers: "${app.Kafka-prefix}-consumers"
    topic:
      email-invitation: ${app.kafka-prefix}-email-invitations-topic


spring:
  application:
    name: NotificationService
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
  cloud:
    config:
      fail-fast: false # if not in "prod" profile, do not force to use Spring Cloud Config
      uri: http://admin:${jhipster.registry.password}@${app.registry-url}:8761/config
      # name of the config server's property source (file.yml) that we want to use
      name: NotificationService
      profile: dev # profile(s) of the property source
      label: master # toggle to switch to a different version of the configuration as stored in git
      # it can be set to any label, branch or commit of the configuration source Git repository
